@inproceedings{fekete_teaching_nodate,
	author = {Fekete, Alan D.},
	title = {Teaching Students to Develop Thread-Safe Java Classes},
	year = {2008},
	isbn = {9781605580784},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://dl.acm.org/doi/pdf/10.1145/1597849.1384304},
	doi = {10.1145/1384271.1384304},
	booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
	pages = {119–123},
	numpages = {5},
	keywords = {data interference, thread-safety, concurrency, synchronization, race conditions},
	location = {Madrid, Spain},
	series = {ITiCSE '08}
}


@inproceedings{li_efficient_2019,
	address = {Huntsville Ontario Canada},
	title = {Efficient scalable thread-safety-violation detection: finding thousands of concurrency bugs during testing},
	isbn = {978-1-4503-6873-5},
	shorttitle = {Efficient scalable thread-safety-violation detection},
	url = {https://dl.acm.org/doi/10.1145/3341301.3359638},
	doi = {10.1145/3341301.3359638},
	language = {en},
	booktitle = {Proceedings of the 27th {ACM} {Symposium} on {Operating} {Systems} {Principles}},
	publisher = {ACM},
	author = {Li, Guangpu and Lu, Shan and Musuvathi, Madanlal and Nath, Suman and Padhye, Rohan},
	month = oct,
	year = {2019},
	pages = {162--180},
}

@article{pradel_fully_nodate,
	title = {Fully automatic and precise detection of thread safety violations},
	language = {en},
	author = {Pradel, Michael and Gross, Thomas R},
    url = {https://dl.acm.org/doi/pdf/10.1145/2254064.2254126}
}

@article{terragni_statically_2021,
	title = {Statically driven generation of concurrent tests for thread-safe classes},
	volume = {31},
	issn = {1099-1689},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.1774},
	doi = {10.1002/stvr.1774},
	language = {en},
	number = {4},
	journal = {Software Testing, Verification and Reliability},
	author = {Terragni, Valerio and Pezzè, Mauro},
	year = {2021},
	keywords = {concurrency, deadlocks, non-determinism, race conditions, test generation, thread safety},
}

@article{erickson_effective_nodate,
    author = {John Erickson and Madanlal Musuvathi and Sebastian Burckhardt and Kirk Olynyk},
    title = {Effective {Data-Race} Detection for the Kernel},
    booktitle = {9th USENIX Symposium on Operating Systems Design and Implementation (OSDI 10)},
    year = {2010},
    address = {Vancouver, BC},
    url = {https://www.usenix.org/conference/osdi10/effective-data-race-detection-kernel},
    publisher = {USENIX Association},
    month = oct
}

@book{
    brian,
    title = {Java Concurrency In Practice},
    author = {Brian Göetz and Tim Peierls and Joshua Bloch and Joseph Bowbeer and David Holmes and Doug Lea},
    url= {https://d1wqtxts1xzle7.cloudfront.net/53777814/Java_Concurrency_In_Practice-libre.pdf},
    isbn = {978-0-321-34960-6},
    month = may,
    year = {2006},
}


@inproceedings{serebryany_threadsanitizer_2009,
	address = {New York New York USA},
	title = {{ThreadSanitizer}: data race detection in practice},
	isbn = {978-1-60558-793-6},
	shorttitle = {{ThreadSanitizer}},
	url = {https://dl.acm.org/doi/10.1145/1791194.1791203},
	doi = {10.1145/1791194.1791203},
	language = {en},
	urldate = {2023-02-06},
	booktitle = {Proceedings of the {Workshop} on {Binary} {Instrumentation} and {Applications}},
	publisher = {ACM},
	author = {Serebryany, Konstantin and Iskhodzhanov, Timur},
	month = dec,
	year = {2009},
	pages = {62--71},
}

@inproceedings{banerjee_theory_2006,
	address = {Portland Maine USA},
	title = {A theory of data race detection},
	isbn = {978-1-59593-414-7},
	url = {https://dl.acm.org/doi/10.1145/1147403.1147416},
	doi = {10.1145/1147403.1147416},
	language = {en},
	urldate = {2023-02-06},
	booktitle = {Proceedings of the 2006 workshop on {Parallel} and distributed systems: testing and debugging},
	publisher = {ACM},
	author = {Banerjee, Utpal and Bliss, Brian and Ma, Zhiqiang and Petersen, Paul},
	month = jul,
	year = {2006},
	pages = {69--78},
}

@inproceedings{naik_effective_nodate,
	author = {Naik, Mayur and Aiken, Alex and Whaley, John},
	title = {Effective Static Race Detection for Java},
	year = {2006},
	isbn = {1595933204},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://dl.acm.org/doi/pdf/10.1145/1133981.1134018},
	doi = {10.1145/1133981.1134018},
	booktitle = {Proceedings of the 27th ACM SIGPLAN Conference on Programming Language Design and Implementation},
	pages = {308–319},
	numpages = {12},
	location = {Ottawa, Ontario, Canada},
	series = {PLDI '06}
}

@inproceedings{savage_eraser_nodate,
	author = {Savage, Stefan and Burrows, Michael and Nelson, Greg and Sobalvarro, Patrick and Anderson, Thomas},
	title = {Eraser: A Dynamic Data Race Detector for Multithreaded Programs},
	year = {1997},
	issue_date = {Nov. 1997},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {15},
	number = {4},
	issn = {0734-2071},
	url = {https://dl.acm.org/doi/pdf/10.1145/265924.265927},
	doi = {10.1145/265924.265927},
	journal = {ACM Trans. Comput. Syst.},
	month = {nov},
	pages = {391–411},
	numpages = {21},
	keywords = {multithreaded programming, binary code modification, race detection}
}

@inproceedings{relay,
    author = {Voung, Jan Wen and Jhala, Ranjit and Lerner, Sorin},
    title = {RELAY: Static Race Detection on Millions of Lines of Code},
    year = {2007},
    isbn = {9781595938114},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {http://progsys.ucsd.edu/~rjhala/papers/relay.pdf},
    doi = {10.1145/1287624.1287654},
    booktitle = {Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
    pages = "205-214",
    location = {Dubrovnik, Croatia},
    series = {ESEC-FSE '07}
}

@inproceedings{nikos_2019,
	author = {Gorogiannis, Nikos and O'Hearn, Peter W. and Sergey, Ilya},
	title = {A True Positives Theorem for a Static Race Detector},
	year = {2019},
	issue_date = {January 2019},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {3},
	number = {POPL},
	url = {https://doi.org/10.1145/3290370},
	doi = {10.1145/3290370},
	journal = {Proc. ACM Program. Lang.},
	month = {jan},
	articleno = {57},
	numpages = {29},
	keywords = {Concurrency, Static Analysis, Abstract Interpretation, Race Freedom}
}

@inproceedings{racerd,
	author = {Blackshear, Sam and Gorogiannis, Nikos and O'Hearn, Peter W. and Sergey, Ilya},
	title = {RacerD: Compositional Static Race Detection},
	year = {2018},
	issue_date = {November 2018},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {2},
	number = {OOPSLA},
	url = {https://dl.acm.org/doi/pdf/10.1145/3290370},
	doi = {10.1145/3276514},
	journal = {Proc. ACM Program. Lang.},
	month = {oct},
	articleno = {144},
	numpages = {28},
	keywords = {Static Analysis, Concurrent Separation Logic, Race Freedom, Concurrency}
}